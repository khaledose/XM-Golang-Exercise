openapi: 3.0.3
info:
  title: XM API
  description: Companies Service
  version: 1.0.0

servers:
  - url: 'http://localhost:8000'
tags:
  - name: Company
    description: Company Endpoints
  - name: Auth
    description: Auth Endpoints

paths:
  /company:
    post:
      tags:
        - Company
      summary: Add new company
      description: Endpoint to add new company
      operationId: AddCompany
      security:
        - auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        200:
          description: Company Created Successfully
        500:
          description: Internal Server Error
        401:
          description: Unauthorized        

  /company/{id}:
    get:
      tags:
        - Company
      summary: Get company by Id
      description: Endpoint to get a company by Id
      operationId: GetCompanyById
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: company id
          example: "839c94ba-c2be-4f1c-bfe1-8fabfdd64e7a"
      responses:
        200:
          description: Company Retrieved Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

    delete:
      tags:
        - Company
      summary: Delete a company
      description: Endpoint to delete a company by Id
      operationId: DeleteCompany
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: company id
          example: "839c94ba-c2be-4f1c-bfe1-8fabfdd64e7a"
      responses:
        200:
          description: Company Deleted Successfully
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

    patch:
      tags:
        - Company
      summary: Update a company
      description: Endpoint to update a company by Id
      operationId: UpdateCompany
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: company id
          example: "839c94ba-c2be-4f1c-bfe1-8fabfdd64e7a"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        200:
          description: Company Updated Successfully
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  
  /company/{id}/status:
    patch:
      tags:
        - Company
      summary: Update company status
      description: Endpoint to update a company status
      operationId: UpdateCompanyStatus
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: company Id
          example: "839c94ba-c2be-4f1c-bfe1-8fabfdd64e7a"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        200:
          description: Company Status Updated Successfully
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  /token:
    post:
      tags:
        - Auth
      summary: Gets JWT token
      description: Endpoint to get JWT token
      operationId: GetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: JWT Token Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
        500:
          description: Internal Server Error

components:
  schemas:
    Company:
      type: object
      properties:
        name: 
          type: string
          example: Company1
        description:
          type: string
          example: company description
        isRegistered:
          type: boolean
          example: true
        numberOfEmployees:
          type: integer
          example: 500
        type:
          type: string
          example: 
            - CORPORATION
            - NON_PROFIT
            - COOPERATIVE
            - SOLE_PROPRIETORSHIP

    Login:
      type: object
      properties:
        email:
          type: string
          example: person@email.com
        password:
          type: string
          example: "123"

    JWT:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImtoYWxlZG9zZUBnbWFpbC5jb20iLCJwYXNzb3dyZCI6IjEyMyJ9.IKHPDDCMSSNdXksvgDjb6vwNS6sj7pGF-_YOycU9TFs

  securitySchemes:
    auth:
      type: http
      description: Security schema
      scheme: bearer
      bearerFormat: JWT
